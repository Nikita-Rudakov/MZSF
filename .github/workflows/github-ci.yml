name: CI/CD Pipeline for Frontend

on:
  push:
    branches:
      - main # Запускать pipeline на каждый push в ветку main
  pull_request:
    branches:
      - main # Запускать pipeline на каждый pull request в ветку main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20' # Выберите нужную версию Node.js

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build # Убедитесь, что эта команда собирает ваш проект

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: production-build
        path: dist # Замените на директорию, где находятся ваши скомпилированные файлы

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: production-build

    - name: Deploy to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Приватный ключ для SSH (добавьте его в Secrets GitHub репозитория)
        SERVER_USER: root # Замените на имя пользователя сервера
        SERVER_HOST: 185.189.167.8 # Замените на IP или домен сервера
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Скопируйте скомпилированные файлы на сервер
        scp -o StrictHostKeyChecking=no -r build/* $SERVER_USER@$SERVER_HOST:/usr/share/nginx/html/

        # Перезапуск Nginx на сервере
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST 'sudo systemctl restart nginx'
